// DO NOT MODIFY!
// Auto-generated by ./generators/usermessagetypes.ts

import * as um from "./protobufs/cstrike15_usermessages";
export type UserMessageName =
  | "VGUIMenu"
  | "Geiger"
  | "Train"
  | "HudText"
  | "SayText"
  | "SayText2"
  | "TextMsg"
  | "HudMsg"
  | "ResetHud"
  | "GameTitle"
  | "Shake"
  | "Fade"
  | "Rumble"
  | "CloseCaption"
  | "CloseCaptionDirect"
  | "SendAudio"
  | "RawAudio"
  | "VoiceMask"
  | "RequestState"
  | "Damage"
  | "RadioText"
  | "HintText"
  | "KeyHintText"
  | "ProcessSpottedEntityUpdate"
  | "ReloadEffect"
  | "AdjustMoney"
  | "StopSpectatorMode"
  | "KillCam"
  | "DesiredTimescale"
  | "CurrentTimescale"
  | "AchievementEvent"
  | "MatchEndConditions"
  | "DisconnectToLobby"
  | "PlayerStatsUpdate"
  | "DisplayInventory"
  | "WarmupHasEnded"
  | "ClientInfo"
  | "XRankGet"
  | "XRankUpd"
  | "CallVoteFailed"
  | "VoteStart"
  | "VotePass"
  | "VoteFailed"
  | "VoteSetup"
  | "ServerRankRevealAll"
  | "SendLastKillerDamageToClient"
  | "ServerRankUpdate"
  | "ItemPickup"
  | "ShowMenu"
  | "BarTime"
  | "AmmoDenied"
  | "MarkAchievement"
  | "MatchStatsUpdate"
  | "ItemDrop"
  | "GlowPropTurnOff"
  | "SendPlayerItemDrops"
  | "RoundBackupFilenames"
  | "SendPlayerItemFound"
  | "ReportHit"
  | "XpUpdate"
  | "QuestProgress"
  | "ScoreLeaderboardData"
  | "PlayerDecalDigitalSignature"
  | "WeaponSound"
  | "UpdateScreenHealthBar"
  | "EntityOutlineHighlight"
  | "SSUI"
  | "SurvivalStats"
  | "EndOfMatchAllPlayersData"
  | "RoundImpactScoreData"
  | "CurrentRoundOdds"
  | "DeepStats";

interface IUserMessageDescriptor {
  name: UserMessageName;
  class: { decode: (buffer: Uint8Array) => unknown };
}

export const userMessages: IUserMessageDescriptor[] = [];
userMessages[um.ECstrike15UserMessages.CS_UM_VGUIMenu] = {
  name: "VGUIMenu",
  class: um.CCSUsrMsgVGUIMenu
};
userMessages[um.ECstrike15UserMessages.CS_UM_Geiger] = {
  name: "Geiger",
  class: um.CCSUsrMsgGeiger
};
userMessages[um.ECstrike15UserMessages.CS_UM_Train] = {
  name: "Train",
  class: um.CCSUsrMsgTrain
};
userMessages[um.ECstrike15UserMessages.CS_UM_HudText] = {
  name: "HudText",
  class: um.CCSUsrMsgHudText
};
userMessages[um.ECstrike15UserMessages.CS_UM_SayText] = {
  name: "SayText",
  class: um.CCSUsrMsgSayText
};
userMessages[um.ECstrike15UserMessages.CS_UM_SayText2] = {
  name: "SayText2",
  class: um.CCSUsrMsgSayText2
};
userMessages[um.ECstrike15UserMessages.CS_UM_TextMsg] = {
  name: "TextMsg",
  class: um.CCSUsrMsgTextMsg
};
userMessages[um.ECstrike15UserMessages.CS_UM_HudMsg] = {
  name: "HudMsg",
  class: um.CCSUsrMsgHudMsg
};
userMessages[um.ECstrike15UserMessages.CS_UM_ResetHud] = {
  name: "ResetHud",
  class: um.CCSUsrMsgResetHud
};
userMessages[um.ECstrike15UserMessages.CS_UM_GameTitle] = {
  name: "GameTitle",
  class: um.CCSUsrMsgGameTitle
};
userMessages[um.ECstrike15UserMessages.CS_UM_Shake] = {
  name: "Shake",
  class: um.CCSUsrMsgShake
};
userMessages[um.ECstrike15UserMessages.CS_UM_Fade] = {
  name: "Fade",
  class: um.CCSUsrMsgFade
};
userMessages[um.ECstrike15UserMessages.CS_UM_Rumble] = {
  name: "Rumble",
  class: um.CCSUsrMsgRumble
};
userMessages[um.ECstrike15UserMessages.CS_UM_CloseCaption] = {
  name: "CloseCaption",
  class: um.CCSUsrMsgCloseCaption
};
userMessages[um.ECstrike15UserMessages.CS_UM_CloseCaptionDirect] = {
  name: "CloseCaptionDirect",
  class: um.CCSUsrMsgCloseCaptionDirect
};
userMessages[um.ECstrike15UserMessages.CS_UM_SendAudio] = {
  name: "SendAudio",
  class: um.CCSUsrMsgSendAudio
};
userMessages[um.ECstrike15UserMessages.CS_UM_RawAudio] = {
  name: "RawAudio",
  class: um.CCSUsrMsgRawAudio
};
userMessages[um.ECstrike15UserMessages.CS_UM_VoiceMask] = {
  name: "VoiceMask",
  class: um.CCSUsrMsgVoiceMask
};
userMessages[um.ECstrike15UserMessages.CS_UM_RequestState] = {
  name: "RequestState",
  class: um.CCSUsrMsgRequestState
};
userMessages[um.ECstrike15UserMessages.CS_UM_Damage] = {
  name: "Damage",
  class: um.CCSUsrMsgDamage
};
userMessages[um.ECstrike15UserMessages.CS_UM_RadioText] = {
  name: "RadioText",
  class: um.CCSUsrMsgRadioText
};
userMessages[um.ECstrike15UserMessages.CS_UM_HintText] = {
  name: "HintText",
  class: um.CCSUsrMsgHintText
};
userMessages[um.ECstrike15UserMessages.CS_UM_KeyHintText] = {
  name: "KeyHintText",
  class: um.CCSUsrMsgKeyHintText
};
userMessages[um.ECstrike15UserMessages.CS_UM_ProcessSpottedEntityUpdate] = {
  name: "ProcessSpottedEntityUpdate",
  class: um.CCSUsrMsgProcessSpottedEntityUpdate
};
userMessages[um.ECstrike15UserMessages.CS_UM_ReloadEffect] = {
  name: "ReloadEffect",
  class: um.CCSUsrMsgReloadEffect
};
userMessages[um.ECstrike15UserMessages.CS_UM_AdjustMoney] = {
  name: "AdjustMoney",
  class: um.CCSUsrMsgAdjustMoney
};
userMessages[um.ECstrike15UserMessages.CS_UM_StopSpectatorMode] = {
  name: "StopSpectatorMode",
  class: um.CCSUsrMsgStopSpectatorMode
};
userMessages[um.ECstrike15UserMessages.CS_UM_KillCam] = {
  name: "KillCam",
  class: um.CCSUsrMsgKillCam
};
userMessages[um.ECstrike15UserMessages.CS_UM_DesiredTimescale] = {
  name: "DesiredTimescale",
  class: um.CCSUsrMsgDesiredTimescale
};
userMessages[um.ECstrike15UserMessages.CS_UM_CurrentTimescale] = {
  name: "CurrentTimescale",
  class: um.CCSUsrMsgCurrentTimescale
};
userMessages[um.ECstrike15UserMessages.CS_UM_AchievementEvent] = {
  name: "AchievementEvent",
  class: um.CCSUsrMsgAchievementEvent
};
userMessages[um.ECstrike15UserMessages.CS_UM_MatchEndConditions] = {
  name: "MatchEndConditions",
  class: um.CCSUsrMsgMatchEndConditions
};
userMessages[um.ECstrike15UserMessages.CS_UM_DisconnectToLobby] = {
  name: "DisconnectToLobby",
  class: um.CCSUsrMsgDisconnectToLobby
};
userMessages[um.ECstrike15UserMessages.CS_UM_PlayerStatsUpdate] = {
  name: "PlayerStatsUpdate",
  class: um.CCSUsrMsgPlayerStatsUpdate
};
userMessages[um.ECstrike15UserMessages.CS_UM_DisplayInventory] = {
  name: "DisplayInventory",
  class: um.CCSUsrMsgDisplayInventory
};
userMessages[um.ECstrike15UserMessages.CS_UM_WarmupHasEnded] = {
  name: "WarmupHasEnded",
  class: um.CCSUsrMsgWarmupHasEnded
};
userMessages[um.ECstrike15UserMessages.CS_UM_ClientInfo] = {
  name: "ClientInfo",
  class: um.CCSUsrMsgClientInfo
};
userMessages[um.ECstrike15UserMessages.CS_UM_XRankGet] = {
  name: "XRankGet",
  class: um.CCSUsrMsgXRankGet
};
userMessages[um.ECstrike15UserMessages.CS_UM_XRankUpd] = {
  name: "XRankUpd",
  class: um.CCSUsrMsgXRankUpd
};
userMessages[um.ECstrike15UserMessages.CS_UM_CallVoteFailed] = {
  name: "CallVoteFailed",
  class: um.CCSUsrMsgCallVoteFailed
};
userMessages[um.ECstrike15UserMessages.CS_UM_VoteStart] = {
  name: "VoteStart",
  class: um.CCSUsrMsgVoteStart
};
userMessages[um.ECstrike15UserMessages.CS_UM_VotePass] = {
  name: "VotePass",
  class: um.CCSUsrMsgVotePass
};
userMessages[um.ECstrike15UserMessages.CS_UM_VoteFailed] = {
  name: "VoteFailed",
  class: um.CCSUsrMsgVoteFailed
};
userMessages[um.ECstrike15UserMessages.CS_UM_VoteSetup] = {
  name: "VoteSetup",
  class: um.CCSUsrMsgVoteSetup
};
userMessages[um.ECstrike15UserMessages.CS_UM_ServerRankRevealAll] = {
  name: "ServerRankRevealAll",
  class: um.CCSUsrMsgServerRankRevealAll
};
userMessages[um.ECstrike15UserMessages.CS_UM_SendLastKillerDamageToClient] = {
  name: "SendLastKillerDamageToClient",
  class: um.CCSUsrMsgSendLastKillerDamageToClient
};
userMessages[um.ECstrike15UserMessages.CS_UM_ServerRankUpdate] = {
  name: "ServerRankUpdate",
  class: um.CCSUsrMsgServerRankUpdate
};
userMessages[um.ECstrike15UserMessages.CS_UM_ItemPickup] = {
  name: "ItemPickup",
  class: um.CCSUsrMsgItemPickup
};
userMessages[um.ECstrike15UserMessages.CS_UM_ShowMenu] = {
  name: "ShowMenu",
  class: um.CCSUsrMsgShowMenu
};
userMessages[um.ECstrike15UserMessages.CS_UM_BarTime] = {
  name: "BarTime",
  class: um.CCSUsrMsgBarTime
};
userMessages[um.ECstrike15UserMessages.CS_UM_AmmoDenied] = {
  name: "AmmoDenied",
  class: um.CCSUsrMsgAmmoDenied
};
userMessages[um.ECstrike15UserMessages.CS_UM_MarkAchievement] = {
  name: "MarkAchievement",
  class: um.CCSUsrMsgMarkAchievement
};
userMessages[um.ECstrike15UserMessages.CS_UM_MatchStatsUpdate] = {
  name: "MatchStatsUpdate",
  class: um.CCSUsrMsgMatchStatsUpdate
};
userMessages[um.ECstrike15UserMessages.CS_UM_ItemDrop] = {
  name: "ItemDrop",
  class: um.CCSUsrMsgItemDrop
};
userMessages[um.ECstrike15UserMessages.CS_UM_GlowPropTurnOff] = {
  name: "GlowPropTurnOff",
  class: um.CCSUsrMsgGlowPropTurnOff
};
userMessages[um.ECstrike15UserMessages.CS_UM_SendPlayerItemDrops] = {
  name: "SendPlayerItemDrops",
  class: um.CCSUsrMsgSendPlayerItemDrops
};
userMessages[um.ECstrike15UserMessages.CS_UM_RoundBackupFilenames] = {
  name: "RoundBackupFilenames",
  class: um.CCSUsrMsgRoundBackupFilenames
};
userMessages[um.ECstrike15UserMessages.CS_UM_SendPlayerItemFound] = {
  name: "SendPlayerItemFound",
  class: um.CCSUsrMsgSendPlayerItemFound
};
userMessages[um.ECstrike15UserMessages.CS_UM_ReportHit] = {
  name: "ReportHit",
  class: um.CCSUsrMsgReportHit
};
userMessages[um.ECstrike15UserMessages.CS_UM_XpUpdate] = {
  name: "XpUpdate",
  class: um.CCSUsrMsgXpUpdate
};
userMessages[um.ECstrike15UserMessages.CS_UM_QuestProgress] = {
  name: "QuestProgress",
  class: um.CCSUsrMsgQuestProgress
};
userMessages[um.ECstrike15UserMessages.CS_UM_ScoreLeaderboardData] = {
  name: "ScoreLeaderboardData",
  class: um.CCSUsrMsgScoreLeaderboardData
};
userMessages[um.ECstrike15UserMessages.CS_UM_PlayerDecalDigitalSignature] = {
  name: "PlayerDecalDigitalSignature",
  class: um.CCSUsrMsgPlayerDecalDigitalSignature
};
userMessages[um.ECstrike15UserMessages.CS_UM_WeaponSound] = {
  name: "WeaponSound",
  class: um.CCSUsrMsgWeaponSound
};
userMessages[um.ECstrike15UserMessages.CS_UM_UpdateScreenHealthBar] = {
  name: "UpdateScreenHealthBar",
  class: um.CCSUsrMsgUpdateScreenHealthBar
};
userMessages[um.ECstrike15UserMessages.CS_UM_EntityOutlineHighlight] = {
  name: "EntityOutlineHighlight",
  class: um.CCSUsrMsgEntityOutlineHighlight
};
userMessages[um.ECstrike15UserMessages.CS_UM_SSUI] = {
  name: "SSUI",
  class: um.CCSUsrMsgSSUI
};
userMessages[um.ECstrike15UserMessages.CS_UM_SurvivalStats] = {
  name: "SurvivalStats",
  class: um.CCSUsrMsgSurvivalStats
};
userMessages[um.ECstrike15UserMessages.CS_UM_EndOfMatchAllPlayersData] = {
  name: "EndOfMatchAllPlayersData",
  class: um.CCSUsrMsgEndOfMatchAllPlayersData
};
userMessages[um.ECstrike15UserMessages.CS_UM_RoundImpactScoreData] = {
  name: "RoundImpactScoreData",
  class: um.CCSUsrMsgRoundImpactScoreData
};
userMessages[um.ECstrike15UserMessages.CS_UM_CurrentRoundOdds] = {
  name: "CurrentRoundOdds",
  class: um.CCSUsrMsgCurrentRoundOdds
};
userMessages[um.ECstrike15UserMessages.CS_UM_DeepStats] = {
  name: "DeepStats",
  class: um.CCSUsrMsgDeepStats
};

interface IUserMessageEvent {
  name: string;
  msg: any;
}

declare module "./usermessages" {
  export interface UserMessages {
    /**
     * Fired when any user message is sent.
     * @note Fired after specific event is fired.
     */
    on(message: "message", listener: (event: IUserMessageEvent) => void): this;
    emit(message: "message", event: IUserMessageEvent): boolean;

    emit(message: UserMessageName, msg: any): boolean;

    on(
      message: "VGUIMenu",
      listener: (msg: um.CCSUsrMsgVGUIMenu) => void
    ): this;
    on(message: "Geiger", listener: (msg: um.CCSUsrMsgGeiger) => void): this;
    on(message: "Train", listener: (msg: um.CCSUsrMsgTrain) => void): this;
    on(message: "HudText", listener: (msg: um.CCSUsrMsgHudText) => void): this;
    on(message: "SayText", listener: (msg: um.CCSUsrMsgSayText) => void): this;
    on(
      message: "SayText2",
      listener: (msg: um.CCSUsrMsgSayText2) => void
    ): this;
    on(message: "TextMsg", listener: (msg: um.CCSUsrMsgTextMsg) => void): this;
    on(message: "HudMsg", listener: (msg: um.CCSUsrMsgHudMsg) => void): this;
    on(
      message: "ResetHud",
      listener: (msg: um.CCSUsrMsgResetHud) => void
    ): this;
    on(
      message: "GameTitle",
      listener: (msg: um.CCSUsrMsgGameTitle) => void
    ): this;
    on(message: "Shake", listener: (msg: um.CCSUsrMsgShake) => void): this;
    on(message: "Fade", listener: (msg: um.CCSUsrMsgFade) => void): this;
    on(message: "Rumble", listener: (msg: um.CCSUsrMsgRumble) => void): this;
    on(
      message: "CloseCaption",
      listener: (msg: um.CCSUsrMsgCloseCaption) => void
    ): this;
    on(
      message: "CloseCaptionDirect",
      listener: (msg: um.CCSUsrMsgCloseCaptionDirect) => void
    ): this;
    on(
      message: "SendAudio",
      listener: (msg: um.CCSUsrMsgSendAudio) => void
    ): this;
    on(
      message: "RawAudio",
      listener: (msg: um.CCSUsrMsgRawAudio) => void
    ): this;
    on(
      message: "VoiceMask",
      listener: (msg: um.CCSUsrMsgVoiceMask) => void
    ): this;
    on(
      message: "RequestState",
      listener: (msg: um.CCSUsrMsgRequestState) => void
    ): this;
    on(message: "Damage", listener: (msg: um.CCSUsrMsgDamage) => void): this;
    on(
      message: "RadioText",
      listener: (msg: um.CCSUsrMsgRadioText) => void
    ): this;
    on(
      message: "HintText",
      listener: (msg: um.CCSUsrMsgHintText) => void
    ): this;
    on(
      message: "KeyHintText",
      listener: (msg: um.CCSUsrMsgKeyHintText) => void
    ): this;
    on(
      message: "ProcessSpottedEntityUpdate",
      listener: (msg: um.CCSUsrMsgProcessSpottedEntityUpdate) => void
    ): this;
    on(
      message: "ReloadEffect",
      listener: (msg: um.CCSUsrMsgReloadEffect) => void
    ): this;
    on(
      message: "AdjustMoney",
      listener: (msg: um.CCSUsrMsgAdjustMoney) => void
    ): this;
    on(
      message: "StopSpectatorMode",
      listener: (msg: um.CCSUsrMsgStopSpectatorMode) => void
    ): this;
    on(message: "KillCam", listener: (msg: um.CCSUsrMsgKillCam) => void): this;
    on(
      message: "DesiredTimescale",
      listener: (msg: um.CCSUsrMsgDesiredTimescale) => void
    ): this;
    on(
      message: "CurrentTimescale",
      listener: (msg: um.CCSUsrMsgCurrentTimescale) => void
    ): this;
    on(
      message: "AchievementEvent",
      listener: (msg: um.CCSUsrMsgAchievementEvent) => void
    ): this;
    on(
      message: "MatchEndConditions",
      listener: (msg: um.CCSUsrMsgMatchEndConditions) => void
    ): this;
    on(
      message: "DisconnectToLobby",
      listener: (msg: um.CCSUsrMsgDisconnectToLobby) => void
    ): this;
    on(
      message: "PlayerStatsUpdate",
      listener: (msg: um.CCSUsrMsgPlayerStatsUpdate) => void
    ): this;
    on(
      message: "DisplayInventory",
      listener: (msg: um.CCSUsrMsgDisplayInventory) => void
    ): this;
    on(
      message: "WarmupHasEnded",
      listener: (msg: um.CCSUsrMsgWarmupHasEnded) => void
    ): this;
    on(
      message: "ClientInfo",
      listener: (msg: um.CCSUsrMsgClientInfo) => void
    ): this;
    on(
      message: "XRankGet",
      listener: (msg: um.CCSUsrMsgXRankGet) => void
    ): this;
    on(
      message: "XRankUpd",
      listener: (msg: um.CCSUsrMsgXRankUpd) => void
    ): this;
    on(
      message: "CallVoteFailed",
      listener: (msg: um.CCSUsrMsgCallVoteFailed) => void
    ): this;
    on(
      message: "VoteStart",
      listener: (msg: um.CCSUsrMsgVoteStart) => void
    ): this;
    on(
      message: "VotePass",
      listener: (msg: um.CCSUsrMsgVotePass) => void
    ): this;
    on(
      message: "VoteFailed",
      listener: (msg: um.CCSUsrMsgVoteFailed) => void
    ): this;
    on(
      message: "VoteSetup",
      listener: (msg: um.CCSUsrMsgVoteSetup) => void
    ): this;
    on(
      message: "ServerRankRevealAll",
      listener: (msg: um.CCSUsrMsgServerRankRevealAll) => void
    ): this;
    on(
      message: "SendLastKillerDamageToClient",
      listener: (msg: um.CCSUsrMsgSendLastKillerDamageToClient) => void
    ): this;
    on(
      message: "ServerRankUpdate",
      listener: (msg: um.CCSUsrMsgServerRankUpdate) => void
    ): this;
    on(
      message: "ItemPickup",
      listener: (msg: um.CCSUsrMsgItemPickup) => void
    ): this;
    on(
      message: "ShowMenu",
      listener: (msg: um.CCSUsrMsgShowMenu) => void
    ): this;
    on(message: "BarTime", listener: (msg: um.CCSUsrMsgBarTime) => void): this;
    on(
      message: "AmmoDenied",
      listener: (msg: um.CCSUsrMsgAmmoDenied) => void
    ): this;
    on(
      message: "MarkAchievement",
      listener: (msg: um.CCSUsrMsgMarkAchievement) => void
    ): this;
    on(
      message: "MatchStatsUpdate",
      listener: (msg: um.CCSUsrMsgMatchStatsUpdate) => void
    ): this;
    on(
      message: "ItemDrop",
      listener: (msg: um.CCSUsrMsgItemDrop) => void
    ): this;
    on(
      message: "GlowPropTurnOff",
      listener: (msg: um.CCSUsrMsgGlowPropTurnOff) => void
    ): this;
    on(
      message: "SendPlayerItemDrops",
      listener: (msg: um.CCSUsrMsgSendPlayerItemDrops) => void
    ): this;
    on(
      message: "RoundBackupFilenames",
      listener: (msg: um.CCSUsrMsgRoundBackupFilenames) => void
    ): this;
    on(
      message: "SendPlayerItemFound",
      listener: (msg: um.CCSUsrMsgSendPlayerItemFound) => void
    ): this;
    on(
      message: "ReportHit",
      listener: (msg: um.CCSUsrMsgReportHit) => void
    ): this;
    on(
      message: "XpUpdate",
      listener: (msg: um.CCSUsrMsgXpUpdate) => void
    ): this;
    on(
      message: "QuestProgress",
      listener: (msg: um.CCSUsrMsgQuestProgress) => void
    ): this;
    on(
      message: "ScoreLeaderboardData",
      listener: (msg: um.CCSUsrMsgScoreLeaderboardData) => void
    ): this;
    on(
      message: "PlayerDecalDigitalSignature",
      listener: (msg: um.CCSUsrMsgPlayerDecalDigitalSignature) => void
    ): this;
    on(
      message: "WeaponSound",
      listener: (msg: um.CCSUsrMsgWeaponSound) => void
    ): this;
    on(
      message: "UpdateScreenHealthBar",
      listener: (msg: um.CCSUsrMsgUpdateScreenHealthBar) => void
    ): this;
    on(
      message: "EntityOutlineHighlight",
      listener: (msg: um.CCSUsrMsgEntityOutlineHighlight) => void
    ): this;
    on(message: "SSUI", listener: (msg: um.CCSUsrMsgSSUI) => void): this;
    on(
      message: "SurvivalStats",
      listener: (msg: um.CCSUsrMsgSurvivalStats) => void
    ): this;
    on(
      message: "EndOfMatchAllPlayersData",
      listener: (msg: um.CCSUsrMsgEndOfMatchAllPlayersData) => void
    ): this;
    on(
      message: "RoundImpactScoreData",
      listener: (msg: um.CCSUsrMsgRoundImpactScoreData) => void
    ): this;
    on(
      message: "CurrentRoundOdds",
      listener: (msg: um.CCSUsrMsgCurrentRoundOdds) => void
    ): this;
    on(
      message: "DeepStats",
      listener: (msg: um.CCSUsrMsgDeepStats) => void
    ): this;
  }
}
