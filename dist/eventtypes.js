"use strict";
/* eslint-disable @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-argument, sonarjs/no-duplicated-branches */
// DO NOT MODIFY!
// Auto-generated by ./generators/eventtypes.ts
Object.defineProperty(exports, "__esModule", { value: true });
exports.annotateEvent = void 0;
const itemdefs_1 = require("./entities/itemdefs");
const Long = require("long");
function annotateEvent(entities, eventName, event) {
    if (eventName === "bomb_begindefuse") {
        event.player = entities.getByUserId(event.userid);
    }
    else if (eventName === "bomb_beginplant") {
        event.player = entities.getByUserId(event.userid);
    }
    else if (eventName === "bomb_defused") {
        event.player = entities.getByUserId(event.userid);
    }
    else if (eventName === "bomb_dropped") {
        event.player = entities.getByUserId(event.userid);
        event.entity = entities.entities.get(event.entindex);
    }
    else if (eventName === "bomb_exploded") {
        event.player = entities.getByUserId(event.userid);
    }
    else if (eventName === "bomb_pickup") {
        event.player = entities.getByUserId(event.userid);
    }
    else if (eventName === "bomb_planted") {
        event.player = entities.getByUserId(event.userid);
    }
    else if (eventName === "bot_takeover") {
        event.player = entities.getByUserId(event.userid);
        event.bot = entities.getByUserId(event.botid);
    }
    else if (eventName === "cs_win_panel_round") {
        event.player = entities.entities.get(event.funfact_player);
    }
    else if (eventName === "decoy_detonate") {
        event.player = entities.getByUserId(event.userid);
        event.entity = entities.entities.get(event.entityid);
    }
    else if (eventName === "decoy_started") {
        event.player = entities.getByUserId(event.userid);
        event.entity = entities.entities.get(event.entityid);
    }
    else if (eventName === "defuser_dropped") {
        event.entity = entities.entities.get(event.entityid);
    }
    else if (eventName === "defuser_pickup") {
        event.entity = entities.entities.get(event.entityid);
        event.player = entities.getByUserId(event.userid);
    }
    else if (eventName === "flashbang_detonate") {
        event.player = entities.getByUserId(event.userid);
        event.entity = entities.entities.get(event.entityid);
    }
    else if (eventName === "hegrenade_detonate") {
        event.player = entities.getByUserId(event.userid);
        event.entity = entities.entities.get(event.entityid);
    }
    else if (eventName === "hostage_hurt") {
        event.player = entities.getByUserId(event.userid);
        event.entity = entities.entities.get(event.hostage);
    }
    else if (eventName === "hostage_killed") {
        event.player = entities.getByUserId(event.userid);
        event.entity = entities.entities.get(event.hostage);
    }
    else if (eventName === "hostage_rescued") {
        event.player = entities.getByUserId(event.userid);
        event.entity = entities.entities.get(event.hostage);
    }
    else if (eventName === "inferno_expire") {
        event.entity = entities.entities.get(event.entityid);
    }
    else if (eventName === "inferno_startburn") {
        event.entity = entities.entities.get(event.entityid);
    }
    else if (eventName === "item_equip") {
        event.player = entities.getByUserId(event.userid);
        event.itemDefinition = itemdefs_1.itemDefinitionIndexMap[event.defindex] || null;
    }
    else if (eventName === "item_pickup") {
        event.player = entities.getByUserId(event.userid);
        event.itemDefinition = itemdefs_1.itemDefinitionIndexMap[event.defindex] || null;
    }
    else if (eventName === "item_remove") {
        event.player = entities.getByUserId(event.userid);
        event.itemDefinition = itemdefs_1.itemDefinitionIndexMap[event.defindex] || null;
    }
    else if (eventName === "items_gifted") {
        event.entity = entities.getByAccountId(event.accountid);
    }
    else if (eventName === "other_death") {
        event.victim = entities.entities.get(event.otherid);
        event.attackerEntity = entities.getByUserId(event.attacker);
        event.itemDefinition =
            event.weapon_fauxitemid != ""
                ? itemdefs_1.itemDefinitionIndexMap[Long.fromString(event.weapon_fauxitemid, true)
                    .and(0xffff)
                    .toString()]
                : null;
        event.paintKit =
            event.weapon_fauxitemid != ""
                ? itemdefs_1.paintKitIndexMap[Long.fromString(event.weapon_fauxitemid, true)
                    .shiftRightUnsigned(16)
                    .and(0xffff)
                    .toString()]
                : null;
        event.originalOwner = entities.getBySteam64Id(event.weapon_originalowner_xuid);
    }
    else if (eventName === "player_blind") {
        event.player = entities.getByUserId(event.userid);
        event.attackerEntity = entities.getByUserId(event.attacker);
        event.entity = entities.entities.get(event.entityid);
    }
    else if (eventName === "player_changename") {
        event.player = entities.getByUserId(event.userid);
    }
    else if (eventName === "player_chat") {
        event.player = entities.getByUserId(event.userid);
    }
    else if (eventName === "player_connect_full") {
        event.player = entities.getByUserId(event.userid);
    }
    else if (eventName === "player_death") {
        event.player = entities.getByUserId(event.userid);
        event.attackerEntity = entities.getByUserId(event.attacker);
        event.assisterEntity = entities.getByUserId(event.assister);
        event.itemDefinition =
            event.weapon_fauxitemid != ""
                ? itemdefs_1.itemDefinitionIndexMap[Long.fromString(event.weapon_fauxitemid, true)
                    .and(0xffff)
                    .toString()]
                : null;
        event.paintKit =
            event.weapon_fauxitemid != ""
                ? itemdefs_1.paintKitIndexMap[Long.fromString(event.weapon_fauxitemid, true)
                    .shiftRightUnsigned(16)
                    .and(0xffff)
                    .toString()]
                : null;
        event.originalOwner = entities.getBySteam64Id(event.weapon_originalowner_xuid);
    }
    else if (eventName === "player_disconnect") {
        event.player = entities.getByUserId(event.userid);
    }
    else if (eventName === "player_falldamage") {
        event.player = entities.getByUserId(event.userid);
    }
    else if (eventName === "player_footstep") {
        event.player = entities.getByUserId(event.userid);
    }
    else if (eventName === "player_hurt") {
        event.player = entities.getByUserId(event.userid);
        event.attackerEntity = entities.getByUserId(event.attacker);
    }
    else if (eventName === "player_info") {
        event.player = entities.getByUserId(event.userid);
    }
    else if (eventName === "player_jump") {
        event.player = entities.getByUserId(event.userid);
    }
    else if (eventName === "player_spawn") {
        event.player = entities.getByUserId(event.userid);
    }
    else if (eventName === "player_team") {
        event.player = entities.getByUserId(event.userid);
    }
    else if (eventName === "round_mvp") {
        event.player = entities.getByUserId(event.userid);
    }
    else if (eventName === "smokegrenade_detonate") {
        event.player = entities.getByUserId(event.userid);
        event.entity = entities.entities.get(event.entityid);
    }
    else if (eventName === "smokegrenade_expired") {
        event.player = entities.getByUserId(event.userid);
        event.entity = entities.entities.get(event.entityid);
    }
    else if (eventName === "survival_paradrop_break") {
        event.entity = entities.entities.get(event.entityid);
    }
    else if (eventName === "survival_paradrop_spawn") {
        event.entity = entities.entities.get(event.entityid);
    }
    else if (eventName === "tournament_reward") {
        event.itemDefinition = itemdefs_1.itemDefinitionIndexMap[event.defindex] || null;
        event.entity = entities.getByAccountId(event.accountid);
    }
    else if (eventName === "weapon_fire") {
        event.player = entities.getByUserId(event.userid);
    }
    else if (eventName === "weapon_fire_on_empty") {
        event.player = entities.getByUserId(event.userid);
    }
    else if (eventName === "weapon_outofammo") {
        event.player = entities.getByUserId(event.userid);
    }
    else if (eventName === "weapon_reload") {
        event.player = entities.getByUserId(event.userid);
    }
    else if (eventName === "weapon_zoom") {
        event.player = entities.getByUserId(event.userid);
    }
    return event;
}
exports.annotateEvent = annotateEvent;
//# sourceMappingURL=eventtypes.js.map